---
import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import Layout from "../../layouts/Layout.astro";
import TableOfContents from '../../components/TableOfContents.astro';

export async function getStaticPaths() {
  const blogEntries = await getCollection("posts");
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content, headings } = await entry.render();

---

<Layout title={entry.data.title}>
  <div class="article-hero-image">
    <Image
      src={entry.data.image}
      onload="this.style.opacity=1"
      alt={entry.data.imageAlt}
      id="hero-img"
    />
  </div>

  <div class="title-container">
    <div id="title-bg"></div>
    <h1 id="title-h1">{entry.data.title}</h1>
  </div>

  <div id="article-content">
    <button id="toggle-hide-side" aria-label="show/hide side metadata and table of contents">hide</button>
    <aside id="article-aside" class="frontmatter">
      <p>by {entry.data.author}</p>
      <p class="date">{entry.data.pubDate.toDateString()}</p>
      <p>{entry.data.description}</p>
      <div class="tags">
        {entry.data.tags.map((item) => <div class="tag">{item}</div>)}
      </div>
      <TableOfContents headings={headings} />
    </aside>
    <main id="main-wrapper" class="wrapper article">
      <Content />
    </main>
  </div>
</Layout>

<style>
  .article-hero-image > img {
    opacity: 0;
    -webkit-transition: all 2s ease;
    -moz-transition: all 2s ease;
    -ms-transition: all 2s ease;
    -o-transition: all 2s ease;
  }

  #toggle-hide-side {
    position: fixed;
    right: 0.8rem;
    background: #0016ff;
    border: none;
    color: white;
    height: 42px;
    width: 42px;
    padding: 0px;
    font-size: 14px;
    margin: 5px 0.5rem 50px 8px;
    bottom: -1rem;
    z-index: 3;
    cursor: pointer;

    @media (max-width: 930px) {
      display: none;
    }
  }

  #article-content {
    display: flex;
    flex-direction: row-reverse;
    -webkit-box-pack: center;
    justify-content: center;
    align-items: flex-start;

    @media (max-width: 930px) {
      flex-direction: column;
    }

    p {
      a {
          color: #3546ff;
        }
    }

    aside {
      flex: 0 100000 16.625rem;
      position: sticky;
      top: 148px;
      max-height: calc(-148px + 100vh);
      overflow: auto;
      padding-bottom: 16px;
      margin-left: auto;
      margin-top: 4px;
      margin-right: 1rem;
      background: transparent;

      p {
        font-family: ui-monospace, monospace;
      }
      p.date {
        font-size: 12px;
      }

      .tags {
        display: flex;
        flex-wrap: wrap;
        margin: 1rem 0rem 0rem 0rem;
      }

      .tag {
        font-family: ui-monospace, monospace;
        margin: 0.4rem 0.4rem 0rem 0rem;
        color: inherit;
        text-decoration: inherit;
        border-radius: 0.25rem;
        padding-left: 0.25rem;
        padding-right: 0.25rem;
        padding-top: 0.125rem;
        padding-bottom: 0.125rem;
        background: #0d2589;
        color: white;
        line-height: 22px;
      }

      @media (max-width: 930px) {
        width: 100%;
        position: relative;
        top: 0px;
        overflow: visible;
        margin: auto;
        padding: 1rem;
        max-width: calc(100% - 4rem);
      }

      @media (max-width: 630px) {
        max-width: 100%;
        margin-bottom: 4rem;
      }
    }
  }
  
  html.dark > body > div.article-hero-image > #hero-img {
    mask-image: linear-gradient(#000 41%, transparent);
  }
  html.dark > body > div.article-hero-image::before {
    background: linear-gradient(180deg, black -60%, transparent);
  }
  html.dark > body > div.title-container > #title-bg {
    filter: brightness(0.9) contrast(1.9);
    mask-image: radial-gradient(
      ellipse 160% 130% at 15% 110%,
      black 30%,
      transparent 60%
    );
    @media (max-width: 630px) {
      mask-image: radial-gradient(ellipse 75% 1150% at 75% 0%,black 40%,transparent 116%);
    }
  }
</style>

