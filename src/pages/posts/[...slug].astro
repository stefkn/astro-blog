---
import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import Layout from "../../layouts/Layout.astro";
import TableOfContents from "../../components/TableOfContents.astro";

export async function getStaticPaths() {
  const blogEntries = await getCollection("posts");
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content, headings } = await entry.render();
---

<Layout title={entry.data.title}>
  <div class="article-hero-image">
    <Image
      src={entry.data.image}
      onload="this.style.opacity=1"
      alt={entry.data.imageAlt}
      id="hero-img"
    />
  </div>

  <div class="title-container">
    <div id="title-bg"></div>
    <h1 id="title-h1">{entry.data.title}</h1>
  </div>

  <div id="article-content">
    <button
      id="toggle-hide-side"
      aria-label="show/hide side metadata and table of contents"
      class="hidden">hide</button
    >
    <aside id="article-aside" class="frontmatter">
      <button
        id="toggle-hide-aside"
        aria-label="show/hide side metadata and table of contents"
      >
        hide
      </button>
      <p>by {entry.data.author}</p>
      <p class="date">{entry.data.pubDate.toDateString()}</p>
      <p>{entry.data.description}</p>
      <div class="tags">
        {entry.data.tags.map((item) => <div class="tag">{item}</div>)}
      </div>
      <TableOfContents headings={headings} />
    </aside>
    <main id="main-wrapper" class="wrapper article">
      <Content />
    </main>
  </div>
</Layout>

<style>
  .article-hero-image > img {
    opacity: 0;
    -webkit-transition: all 2s ease;
    -moz-transition: all 2s ease;
    -ms-transition: all 2s ease;
    -o-transition: all 2s ease;
  }

  body > main.article > figure > figcaption > p {
    margin-top: 0.5rem;
    font-size: 0.4rem;
  }

  #toggle-hide-aside,
  #toggle-hide-side {
    position: relative;
    background: #0016ff;
    border: none;
    color: white;
    height: 42px;
    width: 42px;
    padding: 0px;
    font-size: 14px;
    margin: 0px 0px 10px 0px;
    z-index: 3;
    cursor: pointer;

    @media (max-width: 930px) {
      display: none;
    }
  }

  #toggle-hide-side {
    position: fixed;
    right: 0.8rem;
    bottom: -1rem;
    z-index: 3;
    cursor: pointer;
  }

  html.dark > body > #article-content > aside::-webkit-scrollbar-track {
    background-color: #13151a;
  }

  html.dark > body > #article-content > aside::-webkit-scrollbar-thumb {
    background-color: #fff7f0;
  }

  #article-content {
    display: flex;
    flex-direction: row-reverse;
    -webkit-box-pack: center;
    justify-content: center;
    align-items: flex-start;

    @media (max-width: 930px) {
      flex-direction: column;
    }

    p {
      a {
        color: #3546ff;
      }
      text-align: justify;
    }

    h2 {
      margin-top: 2.8rem;
    }

    aside {
      flex: 0 100000 16.625rem;
      position: sticky;
      top: 148px;
      overflow: auto;
      padding-bottom: 16px;
      margin-left: 0px;
      margin-top: 4px;
      background: transparent;
      margin-right: 4rem;
      overflow: scroll;
      border-bottom: 1px solid white;

      @media (min-width: 1130px) {
        margin-right: 7rem;
      }

      p {
        font-family: ui-monospace, monospace;
        text-align: left;
        padding-right: 2cqb;
      }
      p.date {
        font-size: 12px;
      }

      .tags {
        display: flex;
        flex-wrap: wrap;
        margin: 1rem 0rem 0rem 0rem;
      }

      .tag {
        font-family: ui-monospace, monospace;
        margin: 0.4rem 0.4rem 0rem 0rem;
        color: inherit;
        text-decoration: inherit;
        border-radius: 0.25rem;
        padding-left: 0.25rem;
        padding-right: 0.25rem;
        padding-top: 0.125rem;
        padding-bottom: 0.125rem;
        background: #0d2589;
        color: white;
        line-height: 22px;
      }

      @media (max-width: 930px) {
        width: 100%;
        position: relative;
        top: 0px;
        overflow: visible;
        margin: auto;
        padding: 1rem;
        max-width: calc(100% - 4rem);
      }

      @media (max-width: 630px) {
        max-width: 100%;
        margin-bottom: 4rem;
      }
    }

    aside::-webkit-scrollbar-track {
      background-color: #f5f5f5;
    }

    aside::-webkit-scrollbar-thumb {
      border-radius: 0px;
      background-color: #13151a;
    }

    aside::-webkit-scrollbar {
      width: 4px;
    }
  }

  main {
    border-radius: 5px;
    padding-bottom: 12rem;
    padding-top: 48px;
    margin-top: 0em;

    .frontmatter {
      background-color: #00000063;
      border-radius: 10px;
      padding: 2rem 2rem 2rem 2rem;
      margin: 2rem 0rem;
      p {
        font-family: monospace;
        margin-top: 0rem;
      }
    }
  }
  main :global(img) {
    height: auto !important;
    width: 100%;
    margin-top: 2.2rem;
  }
  .title-container {
    position: relative;
    overflow: hidden;
    max-width: 100%;
    height: 28rem;
    margin-top: 10rem;
    margin-bottom: 8rem;

    h1 {
      position: relative;
      top: -16rem;
      color: #ffffff;
      font-size: clamp(3.6rem, 5vw, 8rem);
      text-shadow: none;
      margin: auto;
      font-family: system-ui, sans-serif;
      padding: 0rem 1rem;
    }

    @media (max-width: 630px) {
      margin-top: -6rem;
      margin-bottom: 0rem;
      h1 {
        top: -6rem;
      }
    }
  }
  html.dark > body > div.title-container > h1 {
    mix-blend-mode: screen;
    text-shadow:
      1px 1px 0 #000dff87,
      -1px 1px 0 #000dff8a,
      -1px -1px 0 #000dff78,
      1px -1px 0 #000dff73;
  }
  #title-bg {
    position: relative;
    display: block;
    mix-blend-mode: screen;
    transform: skew(353deg, 4.5deg) scaleY(2.2);
    background-image: radial-gradient(
        at 67% 151%,
        hsl(268.33deg 34% 9.4% / 32%) 0px,
        transparent 8%
      ),
      radial-gradient(
        at 73% 51%,
        hsl(328.57deg 89% 80% / 69%) -39px,
        transparent 21%
      ),
      radial-gradient(
        at 55% 79%,
        hsl(192.01deg 100% 50% / 47%) 11px,
        transparent 38%
      ),
      radial-gradient(at 48% 58%, hsla(329, 67%, 66%, 1) 26px, transparent 51%),
      radial-gradient(at 60% 65%, hsl(224deg 100% 50%) 73px, transparent 44%),
      radial-gradient(
        at 43% 91%,
        hsl(245deg 100% 50% / 52%) 16px,
        transparent 57%
      ),
      radial-gradient(at 66% 95%, hsla(271, 69%, 76%, 1) 19px, transparent 35%);
    background-size: 1200px;
    height: 18rem;
    border-radius: 21px;
    mask-image: radial-gradient(
      ellipse 100% 150% at 45% 110%,
      black 30%,
      transparent 51%
    );
    filter: hue-rotate(4deg) contrast(2.9) brightness(0.98);
    width: 140%;
    @media (max-width: 630px) {
      max-width: 120%;
      height: 16rem;
    }
  }
  #hero-img {
    height: auto !important;
    position: absolute;
    top: 0px;
    left: 0px;
    width: 100%;
    z-index: -1;
    mask-image: radial-gradient(
      ellipse 145% 42% at 50% 44%,
      black -20%,
      transparent 116%
    );
    filter: contrast(0.85);
  }
  html.dark > body > #article-content > #main-wrapper > p > a {
    color: #818cff;
  }
  html.dark > body > div.article-hero-image > #hero-img {
    mask-image: linear-gradient(#000 0%, transparent 80%);
  }
  html.dark > body > div.article-hero-image::before {
    background: linear-gradient(180deg, black -60%, transparent);
  }
  html.dark > body > div.title-container > #title-bg {
    filter: brightness(0.9) contrast(1.9);
    mask-image: radial-gradient(
      ellipse 160% 130% at 15% 110%,
      black 30%,
      transparent 60%
    );
    @media (max-width: 630px) {
      mask-image: radial-gradient(
        ellipse 75% 1150% at 75% 0%,
        black 40%,
        transparent 116%
      );
    }
  }
</style>

<script>
  import { scroll, animate, inView } from "motion";

  document.addEventListener("astro:page-load", () => {
    // hack to add the css-grid full-bleed style to images in the rendered markdown content
    var mainWrapper = document.querySelector("main.wrapper");
    if (mainWrapper) {
      var paragraphs = mainWrapper.querySelectorAll("p");
      paragraphs.forEach(function (paragraph) {
        if (paragraph.getElementsByTagName("img").length === 1) {
          paragraph.style.width = "100%";
          paragraph.style.gridColumn = "1 / 4";
        }
      });
    }

    if (document.querySelector("#title-h1")) {
      // @ts-ignore
      scroll(
        animate("#title-h1", {
          transform: ["none", `translateY(6em)`],
        }),
        { target: document.querySelector("#title-h1") },
      );
      animate(
        "#title-bg",
        {
          backgroundPositionX: ["0px", "16000px"],
        },
        { duration: 290, repeat: Infinity, direction: "alternate" },
      );
      const siteIcon = document.getElementById("site-icon");
      inView("#nav-menu", ({ target }) => {
        if (!siteIcon) return;

        animate(
          siteIcon,
          { opacity: "1" },
          { delay: 0, duration: 0.8, easing: [0.37, 0.55, 0.85, 1] },
        );

        return (leaveInfo) => {
          animate(
            siteIcon,
            { opacity: "0" },
            { delay: 0, duration: 0.8, easing: [0.37, 0.55, 0.95, 1] },
          );
        };
      });
      const navMenu = document.getElementById("nav-menu");
      if (navMenu && siteIcon && navMenu?.getBoundingClientRect().top < 0) {
        animate(
          siteIcon,
          { opacity: "0" },
          { delay: 0, duration: 0.8, easing: [0.37, 0.55, 0.95, 1] },
        );
      }
    }

    const asideButton = document.getElementById("toggle-hide-aside");
    const sideButton = document.getElementById("toggle-hide-side");

    function handleHideSideContent(event: { stopPropagation: () => void }) {
      event.stopPropagation();
      const articleContent = document.getElementById("main-wrapper");
      const articleSidebar = document.getElementById("article-aside");

      let isHidden = articleSidebar?.classList.contains("hidden");

      if (isHidden) {
        articleSidebar!.classList.remove("hidden");
        articleContent!.classList.remove("wider");
        sideButton!.classList.add("hidden");
        asideButton!.innerHTML = "hide";
        sideButton!.innerHTML = "hide";
      } else {
        articleSidebar!.classList.add("hidden");
        articleContent!.classList.add("wider");
        sideButton!.classList.remove("hidden");
        asideButton!.innerHTML = "show";
        sideButton!.innerHTML = "show";
      }
    }

    asideButton?.addEventListener("click", handleHideSideContent);
    sideButton?.addEventListener("click", handleHideSideContent);
  });
</script>
