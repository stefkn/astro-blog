---
import Layout from "../layouts/Layout.astro";
import { Image } from "astro:assets";
import { getCollection } from "astro:content";
const allPosts = await getCollection("journals");
const pageTitle = "Life journals";
---

<Layout title={pageTitle}>
	<div class="title-bg">
		<div id="bg-content"></div>
		<div id="bg-content-shape1"></div>
	</div>
	<section>
		<h1 id="page-title" class="animated">life</h1>
	</section>
	<main class="wrapper articles">
		{
			allPosts.map((post) => (
				<div class="article-post">
					<div class="post-details">
						<a href={`/life/${post.slug}/`}>{post.data.title}</a>
						<p class="post-date">
							{post.data.pubDate.toDateString()}
						</p>
					</div>
					<div class="article-image">
						<a href={`/life/${post.slug}/`}>
							<Image
								src={post.data.image}
								alt={post.data.imageAlt}
								class="post-index-card-image"
								onload="this.style.opacity=1; this.style.filter='grayscale(0)'"
							/>
						</a>
					</div>
				</div>
			))
		}
	</main>
</Layout>

<script>
	import { inView, animate } from "motion";

	function setupAnimations() {
		inView("section", ({ target }) => {
			if (!target.querySelector(".animated")) {
				return;
			}
			animate(
				// @ts-ignore
				target.querySelector(".animated"),
				{ opacity: 1, transform: "none" },
				{ delay: 0.2, duration: 0.8, easing: [0.17, 0.55, 0.55, 1] },
			);
		});
	}

	// hook animations up to View Transitions via after-swap lifecycle hook
	document.addEventListener("astro:page-load", () => {
		setupAnimations();
	});

	setupAnimations();
</script>

<style>
	main {
		margin-top: 9rem;
	}
	.post-index-card-image {
		-webkit-transition: all 2s ease;
		-moz-transition: all 2s ease;
		-ms-transition: all 2s ease;
		-o-transition: all 2s ease;
		height: auto;
		opacity: 0;
		filter: grayscale(1);
	}
	.articles {
		display: grid;
		grid-template-columns: repeat(auto-fill, minmax(380px, 2fr));
		grid-auto-rows: auto;
		justify-content: start;
		justify-items: stretch;
		gap: 2rem;

		.article-post {
			overflow: hidden;
			grid-column: auto;
			padding: 26px 0px;
			border-bottom-style: solid;
			border-top-style: solid;
			border-color: #dddddd;

			p {
				margin-top: 0.6rem;
				line-height: 1.2;
			}
			a {
				color: inherit;
				font-weight: bolder;
				line-height: 1;
			}
			img {
				border-radius: 4px;
			}

			.post-date {
				font-size: 0.8rem;
				color: #a0a0a0;
			}
			.post-details {
				position: relative;
				margin-top: 10rem;
				max-width: 410px;
				z-index: 3;
				position: absolute;
			}
			.article-image {
				-webkit-transition: all 1.2s ease;
				-moz-transition: all 1.2s ease;
				-ms-transition: all 1.2s ease;
				-o-transition: all 1.2s ease;	
				/* position: absolute; */
				/* max-width: 390px; */
				margin: 0px auto;
				transform: scale(1);
				translate: 0px 0px;
				height: 14em;
				mask-image: radial-gradient(
					ellipse 83% 51% at 85% 19%,
					black 30%,
					transparent 113%
				);
				z-index: 2;
			}
			.article-image:hover {
				transform: scale(1.005);
				translate: 0px -4px;
			}
		}
	}

	html.dark > body > .title-bg {
		filter: brightness(0.8) contrast(0.6) saturate(4) blur(0px) hue-rotate(-46deg);
	}

	.title-bg {
		position: absolute;
		filter: brightness(1.6) contrast(0.9) saturate(1.3) blur(0px) hue-rotate(-46deg);

		mask-image: radial-gradient(
			ellipse 270% 110% at 55% 108%,
			black 50%,
			transparent 110%
		);
		z-index: -1;

		@media (max-width: 850px) {
			left: 0px;
		}
	}
</style>
