---
import Layout from "../layouts/Layout.astro";
import { Image } from "astro:assets";
import { getCollection } from "astro:content";
const allPosts = await getCollection("posts");
const pageTitle = "Blog posts";

---

<Layout title={pageTitle}>
	<div class="background">
		<div id="bg-content"></div>
		<div id="bg-content-shape1"></div>
	</div>
	<main class="wrapper articles">
		{
			allPosts.map((post) => (
				<div class="article-post">
					<a href={`/posts/${post.slug}/`}>
						<Image
							src={post.data.image}
							alt={post.data.imageAlt}
							class="post-index-card-image"
						/>
						{post.data.title}
					</a>
					<div class="post-details">
						<p>{post.data.description}</p>
						<p class="post-date">{post.data.pubDate.toDateString()}</p>	
					</div>
				</div>
			))
		}
	</main>
</Layout>

<script>
	import { inView, animate } from "motion";

	function setupAnimations() {
		inView("section", ({ target }) => {
			if (!target.querySelector(".animated")) {
				return;
			}
			animate(
				// @ts-ignore
				target.querySelector(".animated"),
				{ opacity: 1, transform: "none" },
				{ delay: 0.2, duration: 0.8, easing: [0.17, 0.55, 0.55, 1] },
			);
		});
	}

	// hook animations up to View Transitions via after-swap lifecycle hook
	document.addEventListener("astro:page-load", () => {
		setupAnimations();
	});

	setupAnimations();
</script>

<style>
	main {
		margin-top: 9rem;
	}
	.post-index-card-image {
		height: auto;
		max-height: 12rem;
	}
	.articles {
		display: grid;
		grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
		grid-auto-rows: auto;
		grid-gap: 1rem;
	
		.article-post {
			padding: 1rem;
			border: 1px solid #ccc;
			border-radius: 5px;
			grid-column: auto;
			
			p {
				margin-top: 1rem;
			}
			a {
				color: inherit;
				font-weight: bolder;
			}
			img {
				border-radius: 12px;
			}

			.post-date {
				font-size: 0.8rem;
				color: #666;
			}
			.post-details {
				margin-top: 1rem;
			}
		}
	}

	html.dark > body > .background {
		filter: brightness(0.6) contrast(1.6) saturate(1.4) blur(2px);	
	}

	.background {
		position: absolute;
		height: 110vh;
		width: 100%;
		overflow: hidden;
		left: 0px;
		top: 0px;
		pointer-events: none;
		filter: brightness(1.3) contrast(1.1) saturate(0.8) blur(2px);	

		mask-image: radial-gradient(
			ellipse 270% 110% at 55% 108%,
			black 50%,
			transparent 110%
		);
		z-index: -1;

		@media (max-width: 850px) {
			left: 0px;
		}

		#bg-content {
			position: absolute;
			width: 66rem;
			height: 25rem;
			left: 0px;
			border-radius: 120px;
			z-index: -2;

			transform: skew(24deg, 321deg) scaleY(2.1);
			filter: hue-rotate(236deg) contrast(1) brightness(1.6) blur(64px);
			background-size: 100% 100%;
			background-position:
				0px 0px,
				0px 0px,
				0px 0px,
				0px 0px,
				0px 0px;
			background-image: radial-gradient(
					49% 81% at 45% 47%,
					#ffe20345 0%,
					#073aff00 100%
				),
				radial-gradient(
					113% 91% at 17% -2%,
					#ff5a00ff 1%,
					#ff000000 99%
				),
				radial-gradient(142% 91% at 83% 7%, #ffdb00ff 1%, #ff000000 99%),
				radial-gradient(
					142% 91% at -6% 74%,
					#ff0049ff 1%,
					#ff000000 99%
				),
				radial-gradient(
					142% 91% at 111% 84%,
					#ff7000ff 0%,
					#ff0000ff 100%
				);

			@media (max-width: 650px) {
				height: 12rem;
			}
		}
		#bg-content-shape1 {
			position: absolute;
			width: 66rem;
			height: 25rem;
			left: 0px;
			border-radius: 120px;
			z-index: -1;
			background-size: 100% 100%;
			background-position: 0px 0px;
			opacity: 0.5;
			background-image: conic-gradient(
				from 0deg at 31% 57%,
				#6effd3ff 0%,
				#0807ffff 100%
			);
			mask-image: radial-gradient(
				ellipse 60% 100% at 35% 96%,
				black 20%,
				transparent 90%
			);
			transform: skew(24deg, 321deg) scaleY(2.1);
		}
	}
</style>
